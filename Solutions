case study 1

1.Calculate the number of jobs reviewed per hour per day for November 2020?
select ds, avg(time_spent) as avg_time 
from  job_data 
where ds between '2020-11-25' and '2020-11-30'
group by ds order by ds asc;
	 

2. Let’s say the above metric is called throughput. Calculate 7 day rolling average of throughput? For throughput, do you prefer daily metric or 7-day rolling and why?
SELECT ds, event_per_day, AVG(event_per_day) OVER (ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS 7_day_rolling_avg
FROM (
  SELECT ds, COUNT(DISTINCT event) AS event_per_day
  FROM job_data
  WHERE ds BETWEEN '2020-11-25' AND '2020-11-30'
  GROUP BY ds
) as a
ORDER BY ds ASC;
	 

3. Calculate the percentage share of each language in the last 30 days?
SELECT language, COUNT(language) AS total_languages,
    (COUNT(language) / (SELECT COUNT(*) FROM job_data)) * 100 AS percentage
FROM job_data
GROUP BY language
ORDER BY language;
	 

4.Let’s say you see some duplicate rows in the data. How will you display duplicates from the table?
SELECT language, COUNT(language) AS total_languages,
    (COUNT(language) / (SELECT COUNT(*) FROM job_data)) * 100 AS percentage
FROM job_data
GROUP BY language
ORDER BY language;
	 

Case study 2

1.Calculate the weekly user engagement?
    
SELECT
EXTRACT(WEEK FROM occurred_at) AS week,
    COUNT(user_id) AS active_users
FROM
    events
WHERE
    event_type = 'engagement'
GROUP BY week;
	 

2. Calculate the user growth for product?
SELECT YEAR,WEEK_NUMBER, NUM_USERS,SUM(NUM_USERS) OVER(ORDER BY YEAR,WEEK_NUMBER ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS CUMULATIVE_ACTIVE_USERS
FROM
( SELECT EXTRACT(YEAR FROM ACTIVATED_AT ) AS YEAR,EXTRACT(WEEK FROM ACTIVATED_AT)AS WEEK_NUMBER,COUNT(DISTINCT USER_ID) AS NUM_USERS
FROM users
WHERE STATE='ACTIVE'
GROUP BY YEAR,WEEK_NUMBER
ORDER BY YEAR,WEEK_NUMBER)as A;	 

3. Calculate the weekly retention of users-sign up cohort?
select extract(year from occurred_at) as year , extract(week from occurred_at) as week ,device, count(distinct user_id) as user_type 
from events
where event_type='engagement'
group by  1,2,3
order by 1,2,3;
	 

4. Calculate the weekly engagement per device?
SELECT EXTRACT(WEEK FROM occurred_at) AS week_number, COUNT(DISTINCT user_id),device
FROM events
WHERE event_type = 'engagement'
GROUP BY week_number;
	 

5. Calculate the email engagement metrics?
SELECT ACTION,
EXTRACT(MONTH FROM OCCURRED_AT) AS MONTH,
COUNT(ACTION) AS NUMBER_OF_MAILS
FROM EMAIL_EVENTS
GROUP BY ACTION,MONTH
ORDER BY ACTION,MONTH;
	 
